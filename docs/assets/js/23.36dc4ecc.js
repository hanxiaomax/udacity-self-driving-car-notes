(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{224:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"_1-算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-算术运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 算术运算符")]),a("h3",{attrs:{id:"_1-1-算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-算术运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 算术运算符")]),a("p",[a("code",[t._v("+")]),t._v(" 加"),a("br"),a("code",[t._v("-")]),t._v(" 减"),a("br"),a("code",[t._v("*")]),t._v(" 乘"),a("br"),a("code",[t._v("/")]),t._v(" 除"),a("br"),a("code",[t._v("%")]),t._v(" 取余（相除后的余数）"),a("br"),a("code",[t._v("**")]),t._v(" 取幂（注意 ^ 并不执行该运算，你可能在其他语言中见过这种情形）"),a("br"),a("code",[t._v("//")]),t._v(" 相除后向下取整到最接近的整数")]),a("h3",{attrs:{id:"_1-2表达式的格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2表达式的格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2表达式的格式")]),a("ol",[a("li",[t._v("最好用括号显式的说明优先级，尤其是当你记不清优先级的时候，加括号最保险")]),a("li",[t._v("\b运算符和数字之间要有空格")])]),a("h2",{attrs:{id:"_2-变量与赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-变量与赋值","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. \b变量与赋值")]),a("h4",{attrs:{id:"_2-1-变量赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-变量赋值","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 变量赋值")]),a("p",[t._v("声明一个变量"),a("code",[t._v("mv_population")]),t._v("，然后使用"),a("code",[t._v("=")]),t._v("为其赋值")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mv_population = 74728\n")])]),a("p",[t._v("多个变量同时赋值")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("x, y, z = 3, 4, 5\n等价于\nx = 3\ny = 4\nz = 5\n")])]),a("p",[t._v("赋值运算符")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("x=x+2\n等价于\nx+=2\n")])]),a("h4",{attrs:{id:"_2-2-变量命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-变量命名","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 变量命名")]),a("p",[t._v("\b对于程序员来讲，写代码最大的挑战之一，就是给变量命名，一个好的变量名，胜过千言万语，而要想起一个好名字，还真没你们想象的那么简单")]),a("p",[a("strong",[t._v("基本要求")]),t._v("：")]),a("ol",[a("li",[a("p",[t._v("只能在变量名称中使用常规字母、数字和下划线。不能包含空格，并且需要以字母或下划线开头。")])]),a("li",[a("p",[t._v("不能使用保留字或内置标识符，它们在 Python 中具有重要含义，你将在整个这门课程中学到这些知识。python 保留字列表请参阅此处。创建对值清晰描述的名称可以帮助你避免使用这些保留字。下面是这些保留字的简要表格。")])])]),a("p",[a("strong",[t._v("风格要求")]),t._v("：")]),a("ol",[a("li",[t._v("使用小写字母和下划线来组成变量名")]),a("li",[t._v("尽管下划线可以作为开头，但是下划线是\b开头是有特殊含义的，不建议在常规情况下使用，详见：")]),a("li",[t._v("尽管大写字母的变量名也是合法的\b变量名，但是一般只在定义“枚举”的\b时候才用")]),a("li",[t._v("不要使用拼音")]),a("li",[t._v("如果使用缩写，要是业内熟知的缩写，不要自创")])]),a("h2",{attrs:{id:"_3-基本数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本数据结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 基本数据结构")]),a("p",[t._v("在我们深入了解\bpython的基础数据结构之前，首先给大家隆重的介绍两个基本函数，可以帮我们更好的学习下面的内容。")]),a("ol",[a("li",[a("p",[a("code",[t._v("print()")]),t._v("函数。俗话说，没有什么bug是一条print解决不了的，如果有，就多加几条print。当大家在学习python的过程中有任何疑问的时候，一定要自己先尝试去定位问题，最基本的方法就是用"),a("code",[t._v("print()")]),t._v("函数把你感到有疑问的变量打印出来")])]),a("li",[a("p",[a("code",[t._v("type()")]),t._v("函数，这个函数的作用是告诉我们某个变量的类型，比如：")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\bs "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("print")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token builtin"}},[t._v("type")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("#知道s是string类型了")]),t._v("\n")])])])]),a("h3",{attrs:{id:"_3-1-整数和浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-整数和浮点数","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 整数和浮点数 \b")]),a("ul",[a("li",[a("p",[t._v("整型（int）是所有编程语言里面做常见到的数据类型，1，200，1024都是整形，在Python里面我们可以通过下面的方式来创建整型")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("age = 10  \n>>age is 10 , type is <type 'int'>\nage = int(10)\n>>value is 10 , type is <type 'int'>\ncount=int()\n>>value is 0 , type is <type 'int'>\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("money = 5.1 \n>>age is 5.1 , type is <type 'float'>\nmoney = float(2.2)\n>>value is 2.2 , type is <type 'float'>\ncount=float()\n>>value is 0 , type is <type 'float'>\n")])])])]),a("h3",{attrs:{id:"_3-2-布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-布尔类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 布尔类型")]),a("p",[t._v("1.布尔类型其实就是"),a("code",[t._v("True")]),t._v("或者"),a("code",[t._v("False")]),t._v("，比如我们可以给`一个变量赋值")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("resullt = True\nprint(type(reslut))\n>>>bool #result的类型是bool类型\n")])]),a("p",[t._v("这里千万不要把"),a("code",[t._v("True")]),t._v("或者"),a("code",[t._v("False")]),t._v("当作是一个单词，然后用引号扩起来，在python中"),a("code",[t._v("True")]),t._v("或者"),a("code",[t._v("False")]),t._v("就是一个bool类型的变量")]),a("h3",{attrs:{id:"_3-3-比较运算符和逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-比较运算符和逻辑运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 比较运算符和逻辑运算符")]),a("ul",[a("li",[t._v("python中可以使用"),a("code",[t._v(">")]),t._v(","),a("code",[t._v("<")]),t._v(","),a("code",[t._v(">=")]),t._v(","),a("code",[t._v("<=")]),t._v(","),a("code",[t._v("==")]),t._v(","),a("code",[t._v("!=")]),t._v("作为比较运算符，值得注意的是"),a("code",[t._v("==")]),t._v("是判断是否相等，而不是用等于号"),a("code",[t._v("=")]),t._v("，这点新手容易犯错误。")]),a("li",[t._v("比较运算符返回的结果是布尔类型的，也就是只有"),a("code",[t._v("True")]),t._v("或者"),a("code",[t._v("False")]),t._v("，即等式或不等式是否成立，成立为"),a("code",[t._v("True")]),t._v("，不成立为"),a("code",[t._v("False")])]),a("li",[t._v("Python中还有三个逻辑运算符，"),a("code",[t._v("and")]),t._v(","),a("code",[t._v("or")]),t._v(","),a("code",[t._v("not")]),t._v("，分别表示与或非。")])]),a("h3",{attrs:{id:"_3-4-字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.4 字符串")]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("扩展阅读")]),a("ol",[a("li",[a("a",{attrs:{href:"https://pentangle.net/python/handbook/node52.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python的保留字")])]),a("li",[a("a",{attrs:{href:"https://pentangle.net/python/handbook/node20.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Names and Assignment")])]),a("li",[a("a",{attrs:{href:"https://learnxinyminutes.com/docs/zh-cn/python-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python速成手册")])]),a("li",[a("a",{attrs:{href:"http://www.runoob.com/python/python-operators.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python运算符")])])])])])}],!1,null,null,null);e.default=s.exports}}]);