(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{258:function(a,t,r){a.exports=r.p+"assets/img/15244130185680.0370b40b.jpg"},259:function(a,t,r){a.exports=r.p+"assets/img/15244128720884.f790813e.jpg"},260:function(a,t,r){a.exports=r.p+"assets/img/15244122806575.3941c450.jpg"},261:function(a,t,r){a.exports=r.p+"assets/img/15241548041497.070b067f.jpg"},262:function(a,t,r){a.exports=r.p+"assets/img/15241539700553.3f0ea650.jpg"},263:function(a,t,r){a.exports=r.p+"assets/img/15241524854480.df19178a.jpg"},264:function(a,t,r){a.exports=r.p+"assets/img/15241523182732.d2dc2dd8.jpg"},275:function(a,t,r){"use strict";r.r(t);var i=[function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"a-算法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#a-算法","aria-hidden":"true"}},[a._v("#")]),a._v(" A*算法")]),i("h2",{attrs:{id:"_1-原理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 原理")]),i("p",[a._v("A* 算法总是优先考虑"),i("code",[a._v("f=g+h")]),a._v("最小的路径，其中")]),i("ol",[i("li",[i("code",[a._v("g(path)=path cost")])]),i("li",[i("code",[a._v("h(path)=h(s) = 到终点的估计距离")])])]),i("p",[i("img",{attrs:{src:r(264),alt:""}})]),i("h2",{attrs:{id:"_2-算法过程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-算法过程","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 算法过程")]),i("h3",{attrs:{id:"_1-首先确定每个状态到终点的距离-h"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-首先确定每个状态到终点的距离-h","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 首先确定每个状态到终点的距离 "),i("code",[a._v("h")])]),i("p",[i("img",{attrs:{src:r(263),alt:""}})]),i("h3",{attrs:{id:"_2-起点为：arad"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-起点为：arad","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 起点为：arad")]),i("table",[i("thead",[i("tr",[i("th",[a._v("frontier")]),i("th",[a._v("explored")])])]),i("tbody",[i("tr",[i("td",[a._v("zerind")]),i("td",[a._v("arad")])]),i("tr",[i("td",[a._v("sibiu")]),i("td")]),i("tr",[i("td",[a._v("timisoara")]),i("td")])])]),i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[a._v("arad---- zerind (75+374=449) \narad---- sibiu  (140+253=393) \narad---- timisoara (118+329=447) \n")])]),i("pre",[i("code",[a._v("选择 f 最小的路径进行扩展\n")])]),i("h3",{attrs:{id:"_3-移动到-sibiu"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-移动到-sibiu","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 移动到 sibiu")]),i("table",[i("thead",[i("tr",[i("th",[a._v("frontier")]),i("th",[a._v("explored")])])]),i("tbody",[i("tr",[i("td",[a._v("zerind")]),i("td",[a._v("arad")])]),i("tr",[i("td"),i("td",[a._v("sibiu")])]),i("tr",[i("td",[a._v("timisoara")]),i("td")]),i("tr",[i("td",[a._v("oradea")]),i("td")]),i("tr",[i("td",[a._v("fagaras")]),i("td")]),i("tr",[i("td",[a._v("rimnicu vilcea")]),i("td")])])]),i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[a._v("arad---- zerind (75+374=449) \narad---- sibiu  (140+253=393) \narad---- timisoara (118+329=447) \narad---- sibiu---oradea(291+380=671)\narad---- sibiu---fagaras(239+176=415)\narad---- sibiu---rimnicu_vilcea(220+193=413)  \n")])]),i("p",[a._v("选择 f 最小的路径进行扩展")]),i("h3",{attrs:{id:"_4-移动到rimnicu-vilcea"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-移动到rimnicu-vilcea","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 移动到rimnicu vilcea")]),i("table",[i("thead",[i("tr",[i("th",[a._v("frontier")]),i("th",[a._v("explored")])])]),i("tbody",[i("tr",[i("td",[a._v("zerind")]),i("td",[a._v("arad")])]),i("tr",[i("td"),i("td",[a._v("sibiu")])]),i("tr",[i("td",[a._v("timisoara")]),i("td")]),i("tr",[i("td",[a._v("oradea")]),i("td")]),i("tr",[i("td",[a._v("fagaras")]),i("td")]),i("tr",[i("td"),i("td",[a._v("rimnicu vilcea")])]),i("tr",[i("td",[a._v("pitesti")]),i("td")]),i("tr",[i("td",[a._v("craiova")]),i("td")])])]),i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[a._v("arad---- zerind (75+374=449) \narad---- sibiu  (140+253=393) \narad---- timisoara (118+329=447) \narad---- sibiu---oradea(291+380=671)\narad---- sibiu---fagaras(239+176=415)\narad---- sibiu---rimnicu_vilcea(220+193=413)  \narad---- sibiu---rimnicu_vilcea---pitesti(417)  \narad---- sibiu---rimnicu_vilcea---craiova(526)  \n")])]),i("p",[i("img",{attrs:{src:r(262),alt:""}})]),i("p",[a._v("选择 f 最小的路径进行扩展")]),i("h3",{attrs:{id:"_5-移动到fagaras"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-移动到fagaras","aria-hidden":"true"}},[a._v("#")]),a._v(" 5. 移动到fagaras")]),i("table",[i("thead",[i("tr",[i("th",[a._v("frontier")]),i("th",[a._v("explored")])])]),i("tbody",[i("tr",[i("td",[a._v("zerind")]),i("td",[a._v("arad")])]),i("tr",[i("td"),i("td",[a._v("sibiu")])]),i("tr",[i("td",[a._v("timisoara")]),i("td")]),i("tr",[i("td",[a._v("oradea")]),i("td")]),i("tr",[i("td"),i("td",[a._v("fagaras")])]),i("tr",[i("td"),i("td",[a._v("rimnicu vilcea")])]),i("tr",[i("td",[a._v("pitesti")]),i("td")]),i("tr",[i("td",[a._v("craiova")]),i("td")]),i("tr",[i("td",[a._v("bucharest")]),i("td")])])]),i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[a._v("arad---- zerind (75+374=449) \narad---- sibiu  (140+253=393) (checked)\narad---- timisoara (118+329=447) \narad---- sibiu---oradea(291+380=671)\narad---- sibiu---fagaras(239+176=415)(checked) \narad---- sibiu---rimnicu_vilcea(220+193=413)(checked)  \narad---- sibiu---rimnicu_vilcea---pitesti(417)  \narad---- sibiu---rimnicu_vilcea---craiova(526)  \narad---- sibiu---fagaras--bucharest(450+0=450)\n")])]),i("p",[a._v("选择 f 最小的路径进行扩展")]),i("p",[a._v("###6. 移动到pitesti")]),i("table",[i("thead",[i("tr",[i("th",[a._v("frontier")]),i("th",[a._v("explored")])])]),i("tbody",[i("tr",[i("td",[a._v("zerind")]),i("td",[a._v("arad")])]),i("tr",[i("td"),i("td",[a._v("sibiu")])]),i("tr",[i("td",[a._v("timisoara")]),i("td")]),i("tr",[i("td",[a._v("oradea")]),i("td")]),i("tr",[i("td"),i("td",[a._v("fagaras")])]),i("tr",[i("td"),i("td",[a._v("rimnicu vilcea")])]),i("tr",[i("td"),i("td",[a._v("pitesti")])]),i("tr",[i("td",[a._v("craiova")]),i("td")]),i("tr",[i("td",[a._v("bucharest")]),i("td")]),i("tr",[i("td"),i("td")])])]),i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[a._v("arad---- zerind (75+374=449) \narad---- sibiu  (140+253=393) (checked)\narad---- timisoara (118+329=447) \narad---- sibiu---oradea(291+380=671)\narad---- sibiu---fagaras(239+176=415)(checked) \narad---- sibiu---rimnicu_vilcea(220+193=413)(checked)  \narad---- sibiu---rimnicu_vilcea---pitesti(417)(checked)  \narad---- sibiu---rimnicu_vilcea---craiova(526)  \narad---- sibiu---fagaras--bucharest(450+0=450)\narad---- sibiu---rimnicu_vilcea---pitesti---bucharest(418)\narad---- sibiu---rimnicu_vilcea---pitesti---craiova(526)\n")])]),i("p",[i("img",{attrs:{src:r(261),alt:""}})]),i("h3",{attrs:{id:"_7-移动到终点buchares"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-移动到终点buchares","aria-hidden":"true"}},[a._v("#")]),a._v(" 7. 移动到终点buchares")]),i("p",[a._v("到达终点")]),i("h2",{attrs:{id:"_3-一致性与可纳性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-一致性与可纳性","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 一致性与\b可纳性")]),i("p",[a._v("那么是否能够保证，A*算法一定能找到这样的路径呢？\n答案是否定的，是否能找到取决于启发函数 "),i("code",[a._v("h")])]),i("blockquote",[i("p",[a._v("符合条件的函数 "),i("code",[a._v("h")]),a._v("应该是，小于通过该状态且通往目标的路径的真是耗散，即：\n"),i("code",[a._v("h(s)<true cost")])])]),i("p",[a._v("A*算法能够找到最小路径的条件可以表述为：")]),i("ol",[i("li",[i("p",[a._v("h 不能高估与目标的距离")])]),i("li",[i("p",[a._v("h 是乐观的")])]),i("li",[i("p",[a._v("h 是可采纳的")])]),i("li",[i("p",[a._v("为什么乐观启发函数一定能找到最小路径呢")])])]),i("p",[i("img",{attrs:{src:r(260),alt:""}})]),i("p",[a._v("路径 p 一定小于所有边缘上的路径，因为最短优先。此外，超过边缘上的节点，一定大于该路径因为耗散>=0")]),i("h2",{attrs:{id:"_4-数据结构"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据结构","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 数据结构")]),i("h3",{attrs:{id:"_1-路径"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-路径","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 路径")]),i("p",[i("img",{attrs:{src:r(259),alt:""}})]),i("h3",{attrs:{id:"_2-分类集"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-分类集","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 分类集")]),i("table",[i("thead",[i("tr",[i("th"),i("th",[a._v("frontier")]),i("th",[a._v("explored")])])]),i("tbody",[i("tr",[i("td",[a._v("操作")]),i("td",[a._v("移除/添加节点/成员检测")]),i("td",[a._v("添加节点/成员检测")])]),i("tr",[i("td",[a._v("实现")]),i("td",[a._v("队列")]),i("td")]),i("tr",[i("td",[a._v("表示")]),i("td",[a._v("集合")]),i("td",[a._v("集合")])]),i("tr",[i("td",[a._v("构成")]),i("td",[a._v("哈希表/树")]),i("td",[a._v("哈希表/树")])])])]),i("p",[i("img",{attrs:{src:r(258),alt:""}})]),i("hr"),i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[a._v("扩展阅读")]),i("ol",[i("li",[i("a",{attrs:{href:"http://theory.stanford.edu/~amitp/GameProgramming/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Amit’s A* Pages")])]),i("li",[i("a",{attrs:{href:"https://blog.csdn.net/b2b160/article/details/4057781",target:"_blank",rel:"noopener noreferrer"}},[a._v("堪称最好的A*算法")]),a._v("(上一篇的中文译文版)")]),i("li",[i("a",{attrs:{href:"https://blog.csdn.net/windcao/article/details/1533879",target:"_blank",rel:"noopener noreferrer"}},[a._v("我见过的最容易读懂的 a"),i("em",[a._v("算法(A")]),a._v("寻路初探)")])])])])])}],e=r(0),d=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},i,!1,null,null,null);t.default=d.exports}}]);