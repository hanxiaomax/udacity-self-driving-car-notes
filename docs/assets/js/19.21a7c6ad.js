(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{338:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"lenet-lab-solution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lenet-lab-solution","aria-hidden":"true"}},[t._v("#")]),t._v(" LeNet Lab Solution")]),s("p",[s("img",{attrs:{src:"lenet.png",alt:"LeNet Architecture"}}),t._v("\nSource: Yan LeCun")]),s("h2",{attrs:{id:"load-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#load-data","aria-hidden":"true"}},[t._v("#")]),t._v(" Load Data")]),s("p",[t._v("Load the MNIST data, which comes pre-loaded with TensorFlow.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tensorflow"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("examples"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tutorials"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mnist "),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" input_data\n\nmnist "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input_data"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read_data_sets"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"MNIST_data/"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reshape"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token boolean"}},[t._v("False")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nX_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train           "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mnist"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("images"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mnist"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("labels\nX_validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_validation "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mnist"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("images"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mnist"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("labels\nX_test"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_test             "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mnist"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("images"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mnist"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("labels\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("assert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("assert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y_validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("assert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_test"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y_test"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Image Shape: {}"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shape"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Training Set:   {} samples"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Validation Set: {} samples"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Test Set:       {} samples"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_test"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("The MNIST data that TensorFlow pre-loads comes as 28x28x1 images.")]),s("p",[t._v("However, the LeNet architecture only accepts 32x32xC images, where C is the number of color channels.")]),s("p",[t._v("In order to reformat the MNIST data into a shape that LeNet will accept, we pad the data with two rows of zeros on the top and bottom, and two columns of zeros on the left and right (28+2+2 = 32).")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("# Pad images with 0s")]),t._v("\nX_train      "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pad"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'constant'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nX_validation "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pad"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'constant'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nX_test       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pad"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_test"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'constant'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Updated Image Shape: {}"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shape"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"visualize-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#visualize-data","aria-hidden":"true"}},[t._v("#")]),t._v(" Visualize Data")]),s("p",[t._v("View a sample from the dataset.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" random\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" matplotlib"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pyplot "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" plt\n"),s("span",{attrs:{class:"token operator"}},[t._v("%")]),t._v("matplotlib inline\n\nindex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" random"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("randint"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nimage "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("squeeze"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nplt"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("figure"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("figsize"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nplt"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("imshow"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("image"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cmap"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"gray"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y_train"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"preprocess-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preprocess-data","aria-hidden":"true"}},[t._v("#")]),t._v(" Preprocess Data")]),s("p",[t._v("Shuffle the training data.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sklearn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils "),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" shuffle\n\nX_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" shuffle"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"setup-tensorflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-tensorflow","aria-hidden":"true"}},[t._v("#")]),t._v(" Setup TensorFlow")]),s("p",[t._v("The "),s("code",[t._v("EPOCH")]),t._v(" and "),s("code",[t._v("BATCH_SIZE")]),t._v(" values affect the training speed and model accuracy.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tensorflow "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" tf\n\nEPOCHS "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("10")]),t._v("\nBATCH_SIZE "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("128")]),t._v("\n")])]),s("h2",{attrs:{id:"solution-implement-lenet-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-implement-lenet-5","aria-hidden":"true"}},[t._v("#")]),t._v(" SOLUTION: Implement LeNet-5")]),s("p",[t._v("Implement the "),s("a",{attrs:{href:"http://yann.lecun.com/exdb/lenet/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeNet-5")]),t._v(" neural network architecture.")]),s("p",[t._v("This is the only cell you need to edit.")]),s("h3",{attrs:{id:"input"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#input","aria-hidden":"true"}},[t._v("#")]),t._v(" Input")]),s("p",[t._v("The LeNet architecture accepts a 32x32xC image as input, where C is the number of color channels. Since MNIST images are grayscale, C is 1 in this case.")]),s("h3",{attrs:{id:"architecture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#architecture","aria-hidden":"true"}},[t._v("#")]),t._v(" Architecture")]),s("p",[s("strong",[t._v("Layer 1: Convolutional.")]),t._v(" The output shape should be 28x28x6.")]),s("p",[s("strong",[t._v("Activation.")]),t._v(" Your choice of activation function.")]),s("p",[s("strong",[t._v("Pooling.")]),t._v(" The output shape should be 14x14x6.")]),s("p",[s("strong",[t._v("Layer 2: Convolutional.")]),t._v(" The output shape should be 10x10x16.")]),s("p",[s("strong",[t._v("Activation.")]),t._v(" Your choice of activation function.")]),s("p",[s("strong",[t._v("Pooling.")]),t._v(" The output shape should be 5x5x16.")]),s("p",[s("strong",[t._v("Flatten.")]),t._v(" Flatten the output shape of the final pooling layer such that it's 1D instead of 3D. The easiest way to do is by using "),s("code",[t._v("tf.contrib.layers.flatten")]),t._v(", which is already imported for you.")]),s("p",[s("strong",[t._v("Layer 3: Fully Connected.")]),t._v(" This should have 120 outputs.")]),s("p",[s("strong",[t._v("Activation.")]),t._v(" Your choice of activation function.")]),s("p",[s("strong",[t._v("Layer 4: Fully Connected.")]),t._v(" This should have 84 outputs.")]),s("p",[s("strong",[t._v("Activation.")]),t._v(" Your choice of activation function.")]),s("p",[s("strong",[t._v("Layer 5: Fully Connected (Logits).")]),t._v(" This should have 10 outputs.")]),s("h3",{attrs:{id:"output"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#output","aria-hidden":"true"}},[t._v("#")]),t._v(" Output")]),s("p",[t._v("Return the result of the 2nd fully connected layer.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tensorflow"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contrib"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layers "),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" flatten\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("LeNet")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \n    "),s("span",{attrs:{class:"token comment"}},[t._v("# Arguments used for tf.truncated_normal, randomly defines variables for the weights and biases for each layer")]),t._v("\n    mu "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n    sigma "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0.1")]),t._v("\n    \n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Layer 1: Convolutional. Input = 32x32x1. Output = 28x28x6.")]),t._v("\n    \n    "),s("span",{attrs:{class:"token comment"}},[t._v("# 初始化权重：5*5大小的过滤器，输入深度为1，输出深度为 6")]),t._v("\n    conv1_W "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("truncated_normal"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mu"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stddev "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sigma"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# 初始化偏差，输出深度为 6")]),t._v("\n    conv1_b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zeros"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# 卷积 ：输出维度依照卷积公式计算（H_out = [(H-F+2P)/S]）")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# https://www.cnblogs.com/qggg/p/6832342.html")]),t._v("\n    conv1   "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conv2d"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" conv1_W"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strides"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" padding"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v("'VALID'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" conv1_b\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Activation.")]),t._v("\n    conv1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conv1"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Pooling. Input = 28x28x6. Output = 14x14x6.")]),t._v("\n    conv1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_pool"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conv1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ksize"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strides"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" padding"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v("'VALID'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Layer 2: Convolutional. Output = 10x10x16.")]),t._v("\n    conv2_W "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("truncated_normal"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("16")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mu"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stddev "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sigma"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    conv2_b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zeros"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("16")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    conv2   "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conv2d"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conv1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" conv2_W"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strides"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" padding"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v("'VALID'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" conv2_b\n    \n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Activation.")]),t._v("\n    conv2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conv2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Pooling. Input = 10x10x16. Output = 5x5x16.")]),t._v("\n    conv2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_pool"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conv2"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ksize"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strides"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" padding"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v("'VALID'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Flatten. Input = 5x5x16. Output = 400.")]),t._v("\nfc0   "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" flatten"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conv2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Layer 3: Fully Connected. Input = 400. Output = 120.")]),t._v("\n    fc1_W "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("truncated_normal"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("400")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("120")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mu"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stddev "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sigma"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fc1_b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zeros"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("120")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fc1   "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matmul"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fc0"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fc1_W"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" fc1_b\n    \n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Activation.")]),t._v("\n    fc1    "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fc1"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Layer 4: Fully Connected. Input = 120. Output = 84.")]),t._v("\n    fc2_W  "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("truncated_normal"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("120")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("84")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mu"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stddev "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sigma"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fc2_b  "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zeros"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("84")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fc2    "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matmul"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fc1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fc2_W"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" fc2_b\n    \n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Activation.")]),t._v("\n    fc2    "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fc2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# SOLUTION: Layer 5: Fully Connected. Input = 84. Output = 10.")]),t._v("\n    fc3_W  "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("truncated_normal"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("84")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("10")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" mu"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stddev "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sigma"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fc3_b  "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Variable"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zeros"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("10")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    logits "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matmul"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fc2"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fc3_W"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" fc3_b\n    \n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" logits\n")])]),s("h2",{attrs:{id:"features-and-labels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#features-and-labels","aria-hidden":"true"}},[t._v("#")]),t._v(" Features and Labels")]),s("p",[t._v("Train LeNet to classify "),s("a",{attrs:{href:"http://yann.lecun.com/exdb/mnist/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MNIST")]),t._v(" data.")]),s("p",[s("code",[t._v("x")]),t._v(" is a placeholder for a batch of input images.\n"),s("code",[t._v("y")]),t._v(" is a placeholder for a batch of output labels.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("x "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("placeholder"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("float32"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token boolean"}},[t._v("None")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("32")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("32")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token comment"}},[t._v("#输入")]),t._v("\ny "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("placeholder"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("int32"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token boolean"}},[t._v("None")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token comment"}},[t._v("#label")]),t._v("\none_hot_y "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_hot"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("10")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"training-pipeline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#training-pipeline","aria-hidden":"true"}},[t._v("#")]),t._v(" Training Pipeline")]),s("p",[t._v("Create a training pipeline that uses the model to classify MNIST data.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("rate "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0.001")]),t._v("\n\nlogits "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LeNet"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncross_entropy "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("softmax_cross_entropy_with_logits"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("labels"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("one_hot_y"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logits"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("logits"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nloss_operation "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reduce_mean"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cross_entropy"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\noptimizer "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AdamOptimizer"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("learning_rate "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" rate"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntraining_operation "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" optimizer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minimize"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loss_operation"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"model-evaluation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#model-evaluation","aria-hidden":"true"}},[t._v("#")]),t._v(" Model Evaluation")]),s("p",[t._v("Evaluate how well the loss and accuracy of the model for a given dataset.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("correct_prediction "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equal"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argmax"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logits"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argmax"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("one_hot_y"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\naccuracy_operation "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reduce_mean"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cast"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("correct_prediction"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("float32"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsaver "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Saver"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("evaluate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_data"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    num_examples "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    total_accuracy "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n    sess "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_default_session"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" offset "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("range")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_examples"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BATCH_SIZE"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        batch_x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" batch_y "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" X_data"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("offset"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("offset"),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("BATCH_SIZE"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_data"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("offset"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("offset"),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("BATCH_SIZE"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        accuracy "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" sess"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accuracy_operation"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" feed_dict"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch_x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch_y"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        total_accuracy "),s("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accuracy "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("batch_x"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" total_accuracy "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" num_examples\n")])]),s("h2",{attrs:{id:"train-the-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#train-the-model","aria-hidden":"true"}},[t._v("#")]),t._v(" Train the Model")]),s("p",[t._v("Run the training data through the training pipeline to train the model.")]),s("p",[t._v("Before each epoch, shuffle the training set.")]),s("p",[t._v("After each epoch, measure the loss and accuracy of the validation set.")]),s("p",[t._v("Save the model after training.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("with")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Session"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" sess"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    sess"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("global_variables_initializer"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    num_examples "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("len")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Training..."')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("range")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EPOCHS"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" shuffle"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" offset "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{attrs:{class:"token builtin"}},[t._v("range")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_examples"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BATCH_SIZE"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            end "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" offset "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" BATCH_SIZE\n            batch_x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" batch_y "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" X_train"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("offset"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("end"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_train"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("offset"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("end"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            sess"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("training_operation"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" feed_dict"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch_x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch_y"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            \n        validation_accuracy "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" evaluate"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_validation"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"EPOCH {} ..."')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token operator"}},[t._v("+")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Validation Accuracy = {:.3f}"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("validation_accuracy"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n    saver"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sess"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'./lenet'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Model saved"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("h2",{attrs:{id:"evaluate-the-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#evaluate-the-model","aria-hidden":"true"}},[t._v("#")]),t._v(" Evaluate the Model")]),s("p",[t._v("Once you are completely satisfied with your model, evaluate the performance of the model on the test set.")]),s("p",[t._v("Be sure to only do this once!")]),s("p",[t._v("If you were to measure the performance of your trained model on the test set, then improve your model, and then measure the performance of your model on the test set again, that would invalidate your test results. You wouldn't get a true measure of how well your model would perform against real data.")]),s("p",[t._v("You do not need to modify this section.")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("with")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Session"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" sess"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    saver"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restore"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sess"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("latest_checkpoint"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'.'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    test_accuracy "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" evaluate"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X_test"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_test"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Test Accuracy = {:.3f}"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token builtin"}},[t._v("format")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_accuracy"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);a.default=o.exports}}]);