(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{308:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"project-steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-steps","aria-hidden":"true"}},[t._v("#")]),t._v(" Project Steps")]),a("ol",[a("li",[t._v("Camera calibration")]),a("li",[t._v("Distortion correction")]),a("li",[t._v("Color/gradient threshold")]),a("li",[t._v("Perspective transform")]),a("li",[t._v("Detect lane lines")]),a("li",[t._v("Determine the lane curvature")])]),a("h2",{attrs:{id:"locate-the-lane-lines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#locate-the-lane-lines","aria-hidden":"true"}},[t._v("#")]),t._v(" Locate the Lane Lines")]),a("p",[t._v("**注意：**构造视图变化的点对最终结果有决定性影响，表现在两点：")]),a("ol",[a("li",[t._v("src和dst的点顺序必须一致，从左上的原点开始，顺时针")]),a("li",[t._v("结构必须正确")])]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("corners "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("575")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("475")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("715")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("475")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img_size"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("205")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img_size"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nsrc "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("corners"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("np"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("float32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[t._v("通过一张标准的图像进行选点，只要src的梯形正好覆盖了两条车道线，不论选择的dst矩形如何，车道线一定也是被矩形覆盖的，因为可以看作是同时进行的变换。但是dst矩形的大小会导致车道线的大小产生缩放，此项目中我们暂时不关心")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("    corners "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("581")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("477")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("705")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("477")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1110")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img_size"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("205")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img_size"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    src "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("corners"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("np"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("float32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    dst "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("array"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("400")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("800")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("800")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img_size"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("400")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img_size"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" np"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("float32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[a("img",{attrs:{src:"media/15358532090162.jpg",alt:""}})]),a("p",[t._v("应用到其他图像\n"),a("img",{attrs:{src:"media/15358531378690.jpg",alt:""}})]),a("h3",{attrs:{id:"line-finding-method-peaks-in-a-histogram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#line-finding-method-peaks-in-a-histogram","aria-hidden":"true"}},[t._v("#")]),t._v(" Line Finding Method: Peaks in a Histogram")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("hist")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("# TO-DO: Grab only the bottom half of the image")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("# Lane lines are likely to be mostly vertical nearest to the car")]),t._v("\n    shape "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" img"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shape\n    bottom_half "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" img"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("shape"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token operator"}},[t._v("//")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("#plt.figure(figsize=(24,9))")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v('#plt.imshow(bottom_half,cmap="gray")')]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("# TO-DO: Sum across image pixels vertically - make sure to set `axis`")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("# i.e. the highest areas of vertical lines should be larger values")]),t._v("\n    histogram "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" np"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("sum")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bottom_half"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" axis"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" histogram\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# Create histogram of image binary activations")]),t._v("\nhistogram "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" hist"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warped"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# Visualize the resulting histogram")]),t._v("\nf"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ax1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ax2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" plt"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subplots"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" figsize"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("24")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tight_layout"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nax1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("plot"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("histogram"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v("'b-'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lw"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nax2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("imshow"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warped"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cmap"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"gray"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[a("img",{attrs:{src:"media/15358546108303.jpg",alt:""}})]),a("p",[a("img",{attrs:{src:"media/15358544388268.jpg",alt:""}})]),a("h3",{attrs:{id:"line-finding-method-sliding-windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#line-finding-method-sliding-windows","aria-hidden":"true"}},[t._v("#")]),t._v(" Line Finding Method: Sliding Windows")]),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[t._v("#")])]),a("p",[a("a",{attrs:{href:"https://docs.scipy.org/doc/numpy/reference/generated/numpy.nonzero.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.scipy.org/doc/numpy/reference/generated/numpy.nonzero.html")]),t._v("\nnonzero 返回的是所有非0元素的索引，分别是x和y各一个数组")]),a("ol",[a("li",[t._v("绘制直方图\n"),a("ol",[a("li",[t._v("利用直方图终点确定左右两侧")]),a("li",[t._v("左右两侧分别选取最大值，设置sliding window的起始位置")])])]),a("li",[t._v("获取输入图像中所有非零点x坐标和y坐标")]),a("li",[t._v("遍历所有的window索引（window的个数说设定好的，相当于分辨率）\n"),a("ol",[a("li",[t._v("对于所有非零像素，判断其x，y坐标是否属于该window")]),a("li",[t._v("如果属于该window，加入列表，如果累积超过了设定的阈值minpix，则将window的终点移动到所有这些点x坐标的平均值处，作为下一个window的位置")]),a("li",[t._v("绘制window")])])]),a("li",[t._v("上述步骤执行完毕后，得到了所有满足条件点的坐标，然后对其进行多项式拟合")])]),a("p",[a("img",{attrs:{src:"media/15358958699006.jpg",alt:""}})]),a("p",[a("img",{attrs:{src:"media/15358959456110.jpg",alt:""}})]),a("p",[a("img",{attrs:{src:"media/15358959539486.jpg",alt:""}})]),a("h3",{attrs:{id:"line-finding-method-skip-sliding-windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#line-finding-method-skip-sliding-windows","aria-hidden":"true"}},[t._v("#")]),t._v(" Line Finding Method: Skip Sliding Windows")]),a("p",[t._v("对每一帧都是用sliding window的话，效率是比较低的，所以我们先对第一帧使用。")]),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/csdn15698845876/article/details/73380803",target:"_blank",rel:"noopener noreferrer"}},[t._v("Numpy中stack()，hstack()，vstack()函数详解")])]),a("h4",{attrs:{id:"flipud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flipud","aria-hidden":"true"}},[t._v("#")]),t._v(" flipud")])])}],!1,null,null,null);s.default=o.exports}}]);